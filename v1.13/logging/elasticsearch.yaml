apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: logging
  labels:
    app: elasticsearch
    stack: elk
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: elasticsearch
subjects:
- kind: ServiceAccount
  name: elasticsearch
  namespace: logging
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: elasticsearch
  apiGroup: ""
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: logging
  labels:
    app: elasticsearch
    stack: elk
spec:
  ports:
  - port: 9200
    protocol: TCP
    targetPort: db
  selector:
    app: elasticsearch
    stack: elk
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: logging
  labels:
    app: elasticsearch
    stack: elk
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
      stack: elk
  template:
    metadata:
      labels:
        app: elasticsearch
        stack: elk
    spec:
      serviceAccountName: elasticsearch
      containers:
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
        name: elasticsearch
        resources:
          limits:
            memory: 2.5Gi
            cpu: 1000m
          requests:
            memory: 1.5Mi
            cpu: 100m
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /usr/share/elasticsearch/data
        env:
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "cluster.name"
          value: k8s-cluster
        - name: discovery.zen.ping.unicast.hosts
          value: "elasticsearch-0.elasticsearch.logging.svc.cluster.local"
        - name: path.repo
          value: "/usr/share/elasticsearch/data"
        - name: discovery.type
          value: "single-node"
      initContainers:
      - name: elasticsearch-init
        image: alpine:latest
        command:
        - /bin/sh
        - -c
        args:
        - /sbin/sysctl -w vm.max_map_count=262144;chown -R 1000:1000 /usr/share/elasticsearch/data
        securityContext:
          privileged: true
        volumeMounts:
        - name: storage
          mountPath: /usr/share/elasticsearch/data
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/stack-elk
                operator: Exists
      volumes:
      - name: storage
        hostPath:
          path: /usr/share/elasticsearch/data
          type: DirectoryOrCreate

#  volumeClaimTemplates:
#  - metadata:
#      name: pvc
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      resources:
#        requests:
#          storage: 50Gi
