apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: logging
  labels:
    app: kibana
    stack: elk
spec:
  type: NodePort
  ports:
  - port: 5601
    nodePort: 32002
  selector:
    app: kibana
    stack: elk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: logging
  labels:
    app: kibana-config
    stack: tig
data:
  kibana.yml: |+
    elasticsearch.url: http://elasticsearch:9200
    server.name: k8s-kibana
    server.host: 0.0.0.0
    console.enabled: false
#    logging.quiet: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: logging
  labels:
    app: kibana
    stack: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
      stack: elk
  template:
    metadata:
      labels:
        app: kibana
        stack: elk
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:6.5.4
        resources:
          limits:
            cpu: 2000m
          requests:
            cpu: 100m
        volumeMounts:
        - name: config
          mountPath: /usr/share/kibana/config
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: kubernetes.io/stack-elk
                operator: Exists
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - elasticsearch
            topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: config
        configMap:
          name: kibana-config
